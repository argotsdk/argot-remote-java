/*
 * Copyright (c) 2003-2010, Live Media Pty. Ltd.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted
 * provided that the following conditions are met:
 *
 *  1. Redistributions of source code must retain the above copyright notice, this list of
 *     conditions and the following disclaimer.
 *  2. Redistributions in binary form must reproduce the above copyright notice, this list of
 *     conditions and the following disclaimer in the documentation and/or other materials
 *     provided with the distribution.
 *  3. Neither the name of Live Media nor the names of its contributors may be used to endorse
 *     or promote products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

!import empty;
!import uint8;
!import uint16;
!import int32;
!import u8ascii;
!import meta.definition;

(library.list [

/* Remote Interfaces and Object definitions */

(library.entry
	(library.name meta.name:"remote")
	(meta.cluster))

(library.entry 
	(library.definition meta.name:"remote.parameter" meta.version:"1.3")
	(meta.sequence [
		(meta.tag u8ascii:"type" (meta.reference #uint16))
		(meta.tag u8ascii:"name" (meta.reference #u8ascii))
	]))

(library.entry 
	(library.definition meta.name:"remote.method" meta.version:"1.3")
	(meta.sequence [
		(meta.tag u8ascii:"name" (meta.reference #u8ascii))
		(meta.tag u8ascii:"request"
			(meta.array (meta.reference #uint8) (meta.reference #remote.parameter)))
		(meta.tag u8ascii:"response"
			(meta.array (meta.reference #uint8) (meta.reference #remote.parameter)))
		(meta.tag u8ascii:"error"
			(meta.array (meta.reference #uint8) (meta.reference #uint16)))
	]))

(library.entry 
	(library.definition meta.name:"remote.interface" meta.version:"1.3")
	(meta.sequence [
		(meta.array 
			(meta.reference #uint8)
			(meta.reference #uint16)  /* meta.id */
		)
	])
)

(library.entry 
	(library.relation #meta.definition u8ascii:"1.3" u8ascii:"remote.interface")
	(meta.abstract_map #remote.interface))
	
(library.entry 
	(library.relation #meta.definition u8ascii:"1.3" u8ascii:"remote.method")
	(meta.abstract_map #remote.method))

(library.entry 
	(library.definition meta.name:"remote.location" meta.version:"1.3")
	(meta.abstract []))

(library.entry 
	(library.definition meta.name:"remote.object" meta.version:"1.3")
	(meta.sequence [
		(meta.tag u8ascii:"location" (meta.reference #remote.location))
		(meta.tag u8ascii:"class" (meta.reference #uint16))
	]))

(library.entry 
	(library.definition meta.name:"remote.exception" meta.version:"1.3")
	(meta.abstract [
		(meta.abstract_map #empty)  /* allow exceptions to be null */
	]))


(library.entry 
	(library.definition meta.name:"remote.stack_trace_element" meta.version:"1.3")
	(meta.sequence [
		(meta.tag u8ascii:"className" (meta.reference #u8ascii))
		(meta.tag u8ascii:"methodName" (meta.reference #u8ascii))
		(meta.tag u8ascii:"fileName" (meta.reference #u8ascii))
		(meta.tag u8ascii:"lineNumber" (meta.reference #int32))
	])) 

/* Most exceptions will have the following */

(library.entry 
	(library.definition meta.name:"remote.exception_basic" meta.version:"1.3")
	(meta.sequence [
		(meta.tag u8ascii:"reason" (meta.reference #u8ascii))
		(meta.tag u8ascii:"cause" (meta.reference #remote.exception))
		(meta.tag u8ascii:"stacktrace"
			(meta.array
				(meta.reference #uint16)
				(meta.reference #remote.stack_trace_element)
			)
		)
	])
)

/* This is the default wrapped exception */

(library.entry 
	(library.definition meta.name:"remote.exception_wrapped" meta.version:"1.3")
	(meta.sequence [
		(meta.reference #remote.exception_basic)
	])
)

(library.entry 
	(library.relation #remote.exception u8ascii:"1.3" u8ascii:"remote.exception_wrapped")
	(meta.abstract_map #remote.exception_wrapped))

])
 